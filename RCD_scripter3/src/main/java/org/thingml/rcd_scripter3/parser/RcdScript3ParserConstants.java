/* Generated By:JJTree&JavaCC: Do not edit this line. RcdScript3ParserConstants.java */
package org.thingml.rcd_scripter3.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface RcdScript3ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 11;
  /** RegularExpression Id. */
  int RCD_SKIP_REGION = 12;
  /** RegularExpression Id. */
  int INCLUDE = 14;
  /** RegularExpression Id. */
  int VALARRAY = 15;
  /** RegularExpression Id. */
  int VALUE = 16;
  /** RegularExpression Id. */
  int FILE = 17;
  /** RegularExpression Id. */
  int CLOSE = 18;
  /** RegularExpression Id. */
  int FOR = 19;
  /** RegularExpression Id. */
  int HAS = 20;
  /** RegularExpression Id. */
  int IF = 21;
  /** RegularExpression Id. */
  int ELSE = 22;
  /** RegularExpression Id. */
  int IN = 23;
  /** RegularExpression Id. */
  int PRINT = 24;
  /** RegularExpression Id. */
  int PRINTLN = 25;
  /** RegularExpression Id. */
  int HASH = 26;
  /** RegularExpression Id. */
  int HASHLIST = 27;
  /** RegularExpression Id. */
  int VAR_LITERAL = 28;
  /** RegularExpression Id. */
  int ID_LITERAL = 29;
  /** RegularExpression Id. */
  int DEC_LITERAL = 30;
  /** RegularExpression Id. */
  int FLOAT_LITERAL = 31;
  /** RegularExpression Id. */
  int DECIMAL_EXPONENT = 32;
  /** RegularExpression Id. */
  int HEX_LITERAL = 33;
  /** RegularExpression Id. */
  int STRING_LITERAL = 34;
  /** RegularExpression Id. */
  int LETTER = 35;
  /** RegularExpression Id. */
  int DIGIT = 36;
  /** RegularExpression Id. */
  int HEX_DIGIT = 37;
  /** RegularExpression Id. */
  int OBRA = 38;
  /** RegularExpression Id. */
  int CBRA = 39;
  /** RegularExpression Id. */
  int OCBRA = 40;
  /** RegularExpression Id. */
  int CCBRA = 41;
  /** RegularExpression Id. */
  int OABRA = 42;
  /** RegularExpression Id. */
  int CABRA = 43;
  /** RegularExpression Id. */
  int COMMA = 44;
  /** RegularExpression Id. */
  int PERIOD = 45;
  /** RegularExpression Id. */
  int SEMI = 46;
  /** RegularExpression Id. */
  int COLON = 47;
  /** RegularExpression Id. */
  int ASSIGN = 48;
  /** RegularExpression Id. */
  int EQUAL = 49;
  /** RegularExpression Id. */
  int GT = 50;
  /** RegularExpression Id. */
  int LT = 51;
  /** RegularExpression Id. */
  int GTE = 52;
  /** RegularExpression Id. */
  int LTE = 53;
  /** RegularExpression Id. */
  int NOTEQUAL = 54;
  /** RegularExpression Id. */
  int DOLLAR = 55;
  /** RegularExpression Id. */
  int PLUS = 56;
  /** RegularExpression Id. */
  int MINUS = 57;
  /** RegularExpression Id. */
  int MUL = 58;
  /** RegularExpression Id. */
  int DIV = 59;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_RCD_SKIP_REGION = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\\\\"",
    "\"\\t\"",
    "\" \"",
    "\"//\"",
    "\"*/\"",
    "\"/*\"",
    "\"RCD_SCRIPT_STOP\"",
    "<SINGLE_LINE_COMMENT>",
    "\"RCD_SCRIPT_START\"",
    "<token of kind 13>",
    "\"INCLUDE\"",
    "\"VALARRAY\"",
    "\"VALUE\"",
    "\"FILE\"",
    "\"CLOSE\"",
    "\"FOR\"",
    "\"HAS\"",
    "\"IF\"",
    "\"ELSE\"",
    "\"IN\"",
    "\"PRINT\"",
    "\"PRINTLN\"",
    "\"HASH\"",
    "\"HASHLIST\"",
    "<VAR_LITERAL>",
    "<ID_LITERAL>",
    "<DEC_LITERAL>",
    "<FLOAT_LITERAL>",
    "<DECIMAL_EXPONENT>",
    "<HEX_LITERAL>",
    "<STRING_LITERAL>",
    "<LETTER>",
    "<DIGIT>",
    "<HEX_DIGIT>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\".\"",
    "\";\"",
    "\":\"",
    "\"=\"",
    "\"==\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"!=\"",
    "\"$\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
  };

}
