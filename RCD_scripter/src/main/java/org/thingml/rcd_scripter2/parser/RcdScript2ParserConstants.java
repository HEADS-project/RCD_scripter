/* Generated By:JavaCC: Do not edit this line. RcdScript2ParserConstants.java */
package org.thingml.rcd_scripter2.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface RcdScript2ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 9;
  /** RegularExpression Id. */
  int ADD = 11;
  /** RegularExpression Id. */
  int ARRAY = 12;
  /** RegularExpression Id. */
  int CELL = 13;
  /** RegularExpression Id. */
  int FILE = 14;
  /** RegularExpression Id. */
  int FOR_EACH = 15;
  /** RegularExpression Id. */
  int HAS = 16;
  /** RegularExpression Id. */
  int IF = 17;
  /** RegularExpression Id. */
  int IN = 18;
  /** RegularExpression Id. */
  int INT = 19;
  /** RegularExpression Id. */
  int PRINT = 20;
  /** RegularExpression Id. */
  int ROW = 21;
  /** RegularExpression Id. */
  int SETDEF = 22;
  /** RegularExpression Id. */
  int TABLE = 23;
  /** RegularExpression Id. */
  int VALUE = 24;
  /** RegularExpression Id. */
  int VAR_LITERAL = 25;
  /** RegularExpression Id. */
  int ID_LITERAL = 26;
  /** RegularExpression Id. */
  int DEC_LITERAL = 27;
  /** RegularExpression Id. */
  int HEX_LITERAL = 28;
  /** RegularExpression Id. */
  int STRING_LITERAL = 29;
  /** RegularExpression Id. */
  int LETTER = 30;
  /** RegularExpression Id. */
  int DIGIT = 31;
  /** RegularExpression Id. */
  int HEX_DIGIT = 32;
  /** RegularExpression Id. */
  int OBRA = 33;
  /** RegularExpression Id. */
  int CBRA = 34;
  /** RegularExpression Id. */
  int OCBRA = 35;
  /** RegularExpression Id. */
  int CCBRA = 36;
  /** RegularExpression Id. */
  int COMMA = 37;
  /** RegularExpression Id. */
  int PERIOD = 38;
  /** RegularExpression Id. */
  int ASSIGN = 39;
  /** RegularExpression Id. */
  int DOLLAR = 40;
  /** RegularExpression Id. */
  int PLUS = 41;
  /** RegularExpression Id. */
  int MINUS = 42;
  /** RegularExpression Id. */
  int MUL = 43;
  /** RegularExpression Id. */
  int DIV = 44;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\\\\"",
    "\"\\t\"",
    "\" \"",
    "\"//\"",
    "\"##\"",
    "<SINGLE_LINE_COMMENT>",
    "<token of kind 10>",
    "\"ADD\"",
    "\"ARRAY\"",
    "\"CELL\"",
    "\"FILE\"",
    "\"FOR_EACH\"",
    "\"HAS\"",
    "\"IF\"",
    "\"IN\"",
    "\"INT\"",
    "\"PRINT\"",
    "\"ROW\"",
    "\"SETDEF\"",
    "\"TABLE\"",
    "\"VALUE\"",
    "<VAR_LITERAL>",
    "<ID_LITERAL>",
    "<DEC_LITERAL>",
    "<HEX_LITERAL>",
    "<STRING_LITERAL>",
    "<LETTER>",
    "<DIGIT>",
    "<HEX_DIGIT>",
    "<OBRA>",
    "<CBRA>",
    "<OCBRA>",
    "<CCBRA>",
    "\",\"",
    "\".\"",
    "\"=\"",
    "\"$\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
  };

}
